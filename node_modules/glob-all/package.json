{
  "_args": [
    [
      "glob-all",
      "C:\\Users\\fjauvat\\Desktop\\wasabi_fabrice"
    ]
  ],
  "_from": "glob-all@*",
  "_id": "glob-all@3.0.1",
  "_inCache": true,
  "_location": "/glob-all",
  "_nodeVersion": "0.10.32",
  "_npmUser": {
    "email": "dev@jpillora.com",
    "name": "jpillora"
  },
  "_npmVersion": "2.0.2",
  "_phantomChildren": {},
  "_requested": {
    "name": "glob-all",
    "raw": "glob-all",
    "rawSpec": "",
    "scope": null,
    "spec": "*",
    "type": "range"
  },
  "_requiredBy": [
    "#USER"
  ],
  "_resolved": "https://registry.npmjs.org/glob-all/-/glob-all-3.0.1.tgz",
  "_shasum": "6347edfb5e026cbe35d0eeabd5385ce9c28312ff",
  "_shrinkwrap": null,
  "_spec": "glob-all",
  "_where": "C:\\Users\\fjauvat\\Desktop\\wasabi_fabrice",
  "author": {
    "name": "Jaime Pillora"
  },
  "bugs": {
    "url": "https://github.com/jpillora/node-glob-all/issues"
  },
  "dependencies": {
    "glob": "^4.0.6"
  },
  "description": "Provide multiple patterns to node-glob",
  "devDependencies": {
    "coffee-script": "^1.7.1"
  },
  "directories": {},
  "dist": {
    "shasum": "6347edfb5e026cbe35d0eeabd5385ce9c28312ff",
    "tarball": "http://registry.npmjs.org/glob-all/-/glob-all-3.0.1.tgz"
  },
  "gitHead": "410856452bc212b34ab547826bfe6158ce8e2539",
  "homepage": "https://github.com/jpillora/node-glob-all",
  "installable": true,
  "keywords": [
    "all",
    "file",
    "generation",
    "glob",
    "manifest",
    "multi"
  ],
  "license": "MIT",
  "main": "glob-all.js",
  "maintainers": [
    {
      "name": "jpillora",
      "email": "dev@jpillora.com"
    }
  ],
  "name": "glob-all",
  "optionalDependencies": {},
  "readme": "# glob-all\r\n\r\nProvides a similar API to [glob](https://github.com/isaacs/node-glob), however instead of a single pattern, you may also use arrays of patterns.\r\n\r\n### Install\r\n\r\n```\r\nnpm install --save glob-all\r\n```\r\n\r\n### Usage\r\n\r\nGiven files:\r\n```\r\nfiles\r\n├── a.txt\r\n├── b.txt\r\n├── c.txt\r\n└── x\r\n    ├── y.txt\r\n    └── z.txt\r\n```\r\n\r\nWe can:\r\n``` js\r\nvar glob = require('glob-all');\r\n\r\nvar files = glob.sync([\r\n  'files/**',      //include all     files/\r\n  '!files/x/**',   //then, exclude   files/x/\r\n  'files/x/z.txt'  //then, reinclude files/x/z.txt\r\n]);\r\n\r\nconsole.log(files);\r\n```\r\n\r\nResulting in:\r\n```\r\n[ 'files',\r\n  'files/a.txt',\r\n  'files/b.txt',\r\n  'files/c.txt',\r\n  'files/x/z.txt' ]\r\n```\r\n\r\n### API\r\n\r\n* Async - `glob(patterns[, options], callback)`\r\n  * Returns a `GlobAll` instance which emits:\r\n    * `match`\r\n    * `error`\r\n    * `end`\r\n\r\n* Sync - `glob.sync(patterns[, options])`\r\n  * Returns `[String]` or `null`\r\n\r\nSee [node-glob](https://github.com/isaacs/node-glob)\r\n\r\n### Notes\r\n\r\n#### Exclude Pattern\r\n\r\nSince [node-glob](https://github.com/isaacs/node-glob) only allows one pattern, there is no such thing as an exclude pattern (like in Grunt and Gulp). However, in `node-glob-all` we allow exclusion of the results of an entire pattern by prefixing the pattern with `!`.\r\n\r\n[node-glob](https://github.com/isaacs/node-glob) exclusions (`!` inside the pattern) to exclude a portion of the path will still work as expected.\r\n\r\n#### File Order\r\n\r\nIf a file occurs in more than once in the set, the one with the **more precise pattern** will be used and the other will be thrown away. So, if you'd like a file be in a certain position, you could do:\r\n\r\n``` js\r\nvar glob = require('glob-all');\r\n\r\nvar files = glob.sync([\r\n  'files/x/y.txt',\r\n  'files/**'\r\n]);\r\n\r\nconsole.log(files);\r\n```\r\n\r\nWhich will bring `files/x/y.txt` to the top:\r\n\r\n```\r\n[ 'files/x/y.txt',\r\n  'files',\r\n  'files/a.txt',\r\n  'files/b.txt',\r\n  'files/c.txt',\r\n  'files/x',\r\n  'files/x/z.txt' ]\r\n```\r\n\r\n#### Filtering out directories\r\n\r\nYou can use the `mark` option to mark directories with a `/`, then you can:\r\n``` js\r\nfiles.filter(function(f) { return !/\\/$/.test(f); });\r\n```\r\n\r\n#### Performance\r\n\r\nInternally, `glob-all` uses the `statCache` option to prevent repeat lookups across multiple patterns.\r\n\r\n#### Todo\r\n\r\n* Implement `abort()`\r\n* Add tests\r\n\r\n#### Contributing\r\n\r\n* `npm install`\r\n* `npm start`\r\n* Edit `src/index.coffee`\r\n\r\n#### MIT License\r\n\r\nCopyright &copy; 2014 Jaime Pillora &lt;dev@jpillora.com&gt;\r\n\r\nPermission is hereby granted, free of charge, to any person obtaining\r\na copy of this software and associated documentation files (the\r\n'Software'), to deal in the Software without restriction, including\r\nwithout limitation the rights to use, copy, modify, merge, publish,\r\ndistribute, sublicense, and/or sell copies of the Software, and to\r\npermit persons to whom the Software is furnished to do so, subject to\r\nthe following conditions:\r\n\r\nThe above copyright notice and this permission notice shall be\r\nincluded in all copies or substantial portions of the Software.\r\n\r\nTHE SOFTWARE IS PROVIDED 'AS IS', WITHOUT WARRANTY OF ANY KIND,\r\nEXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\r\nMERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.\r\nIN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY\r\nCLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT,\r\nTORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE\r\nSOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\r\n",
  "readmeFilename": "README.md",
  "repository": {
    "type": "git",
    "url": "git+https://github.com/jpillora/node-glob-all.git"
  },
  "scripts": {
    "prepublish": "./node_modules/coffee-script/bin/coffee -c -o ./ src/glob-all.coffee",
    "start": "./node_modules/coffee-script/bin/coffee  -w -c -o ./ src/glob-all.coffee"
  },
  "version": "3.0.1"
}
