PREFIX db-owl: <http://dbpedia.org/ontology/>
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>
PREFIX prop: <http://dbpedia.org/property/>
PREFIX dc:      <http://purl.org/dc/terms/>
CONSTRUCT {
		 <http://dbpedia.org/resource/Different_World_(song)>	db-owl:writer ?writer ;
				  		db-owl:abstract ?abstractBand ;
						db-owl:producer ?producer;
						db-owl:genre ?genre;
						#prop:label ?label  ; a mettre pour les requêtes d'album
						#db-owl:recordLabel ?recordLabel; 
						db-owl:album ?album.
}
where {
  service <http://dbpedia.org/sparql/> {
     select *
     where {

		<http://dbpedia.org/resource/Different_World_(song)> 		db-owl:bandMember ?bandMemberBand.
		OPTIONAL {<http://dbpedia.org/resource/Iron_Maiden>	db-owl:activeYearsStartYear ?activeYearsStartYearBand}  .
		OPTIONAL {<http://dbpedia.org/resource/Iron_Maiden>	db-owl:abstract ?abstractBand			. FILTER langMatches(lang(?abstractBand), 'en')} .
		#Extraction des informations sur les anciens membres
		#OPTIONAL imbriqué car ?formerBandMemberBand peut ne pas exister, si c'est le cas virtuoso prédit un temps trop élevé pour la requête et nous bloque
		OPTIONAL {
			<http://dbpedia.org/resource/Different_World_(song)>	db-owl:formerBandMember ?formerBandMemberBand .
			?formerBandMemberBand 		rdfs:label   		?labelFormer.  FILTER langMatches(lang(?labelFormer), 'en') .
			OPTIONAL {?formerBandMemberBand  	prop:birthName   	?birthNameFormer	. FILTER langMatches(lang(?birthNameFormer), 'en')} .

		}.
		




     }ORDER BY DESC(?bandMemberBand) 
  }
}